[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bayes-for-days"
version = "0.1.0"
description = "Comprehensive Bayesian experimental design optimization platform with multi-objective capabilities"
authors = [
    {name = "Bayes For Days Team", email = "team@bayesfordays.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    # Core scientific computing
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    
    # Bayesian optimization and Gaussian processes
    "botorch>=0.9.0",
    "gpytorch>=1.9.0",
    "scikit-optimize>=0.9.0",
    
    # Multi-objective optimization
    "pymoo>=0.6.0",
    "deap>=1.3.0",
    
    # Machine learning frameworks
    "torch>=1.12.0",
    "tensorflow>=2.10.0",
    
    # Web framework and API
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "websockets>=11.0",
    "pydantic>=2.0.0",
    
    # Data processing and validation
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "openpyxl>=3.0.0",
    
    # Visualization
    "plotly>=5.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    
    # Database and caching
    "sqlalchemy>=2.0.0",
    "alembic>=1.8.0",
    "redis>=4.0.0",
    
    # Task processing
    "celery>=5.2.0",
    
    # Utilities
    "python-dotenv>=0.19.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "loguru>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
    "mkdocstrings[python]>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/mfethe1/Bayes_For_Days"
Repository = "https://github.com/mfethe1/Bayes_For_Days"
Documentation = "https://bayes-for-days.readthedocs.io"
Issues = "https://github.com/mfethe1/Bayes_For_Days/issues"

[project.scripts]
bayes-for-days = "bayes_for_days.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bayes_for_days"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=bayes_for_days",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/bayes_for_days"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
